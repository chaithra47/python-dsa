class Node:
    def __init__(self , data):
        self.data = data
        self.prev = None
        self.next = None

class DLL:
    def __init__(self):
        self.head = None 

    def insert_at_beginning(self,data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            new_node.next = self.head
            self.head.prev = new_node
            self.head = new_node

    def insert_at_the_end(self,data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        curr = self.head
        while curr.next:
            curr = curr.next
        curr.next = new_node
        new_node.prev = curr
        new_node.next = None

    def insert_at_pos(self,data,pos):
        if pos<=0:
            print("Position should be >=1")
            return
        new_node = Node(data)
        if pos==1:
            self.insert_at_beginning(data)
            return
        temp = self.head
        c = 1
        while temp and c < pos-1:
            temp = temp.next
            c += 1

        if temp is None:
            print("Position out of range")
            return
        new_node.next = temp.next
        new_node.prev = temp
        if temp.next:
            temp.next.prev = new_node
        temp.next = new_node

    def display(self):
        curr = self.head
        while curr:
            print(curr.data,end="->")
            curr = curr.next
        print("None")


dll = DLL()
dll.insert_at_beginning(30)
dll.display()
dll.insert_at_beginning(20)
dll.display()
dll.insert_at_beginning(10)
dll.display()
dll.insert_at_the_end(60)
dll.display()
dll.insert_at_the_end(70)
dll.display()
dll.insert_at_pos(80,2)
dll.display()
